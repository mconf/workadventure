name: Build, push and deploy Docker image

on:
  push:
    branches: [master, develop]
  release:
    types: [created]
  pull_request:
    types: [labeled, synchronize]

jobs:
  build-front:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # messages
      - name: Install messages dependencies
        run: yarn install
        working-directory: messages

      - name: Tag the API version
        run: yarn run tag-version
        working-directory: messages

      - name: Build proto messages
        run: yarn run ts-proto && yarn run copy-to-front-ts-proto && yarn run json-copy-to-front
        working-directory: messages

      # docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: rlespinasse/github-slug-action@3.1.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: mconf/workadventure-front

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: front/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: mconf/workadventure-front:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
          labels: ${{ steps.meta.outputs.labels }}

  build-back:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # messages
      - name: Install messages dependencies
        run: yarn install
        working-directory: messages

      - name: Tag the API version
        run: yarn run tag-version
        working-directory: messages

      - name: Build proto messages
        run: yarn run proto && yarn run copy-to-back && yarn run json-copy-to-back
        working-directory: messages

      # docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: rlespinasse/github-slug-action@3.1.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: mconf/workadventure-back

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: back/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: mconf/workadventure-back:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
          labels: ${{ steps.meta.outputs.labels }}

  build-pusher:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # messages
      - name: Install messages dependencies
        run: yarn install
        working-directory: messages

      - name: Tag the API version
        run: yarn run tag-version
        working-directory: messages

      - name: Build proto messages
        run: yarn run proto && yarn run copy-to-pusher && yarn run json-copy-to-pusher
        working-directory: messages

      # docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: rlespinasse/github-slug-action@3.1.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: mconf/workadventure-pusher

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: pusher/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: mconf/workadventure-pusher:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
          labels: ${{ steps.meta.outputs.labels }}

  build-uploader:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: rlespinasse/github-slug-action@3.1.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: mconf/workadventure-uploader

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: uploader/Dockerfile
          push: true
          tags: mconf/workadventure-uploader:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
          labels: ${{ steps.meta.outputs.labels }}

  build-maps:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: rlespinasse/github-slug-action@3.1.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: mconf/workadventure-maps

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: maps/
          file: maps/Dockerfile
          push: true
          tags: mconf/workadventure-maps:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
          labels: ${{ steps.meta.outputs.labels }}
